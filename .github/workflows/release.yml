name: RELEASE NEW VERSION
on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  get_version:
    name: GET VERSION FROM FILE
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'release')
    runs-on: [self-hosted]

    permissions:
      contents: read

    outputs:
      MAJOR: ${{ steps.read_version_variables.outputs.MAJOR }}
      MINOR: ${{ steps.read_version_variables.outputs.MINOR }}
      PATCH: ${{ steps.read_version_variables.outputs.PATCH }}

    steps:
      - name: CHECKOUT CODE
        uses: actions/checkout@v4

      - name: READ VERSION FROM FILE TO OUTPUT
        id: read_version_variables
        run: |
          for line in $(cat .version); do echo "$line" >> "$GITHUB_OUTPUT"; done

      - name: SHOW VERSION
        run: |
          echo "CURRENT VERSION: ${{ steps.read_version_variables.outputs.MAJOR }}.${{ steps.read_version_variables.outputs.MINOR }}.${{ steps.read_version_variables.outputs.PATCH }}"

  build:
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'release')
    name: BUILD DISTRIBUTION PACKAGE
    runs-on: [self-hosted]
    needs: get_version

    steps:
      - name: CHECKOUT CODE
        uses: actions/checkout@v4.1.6

      - name: SET UP PYTHON
        uses: actions/setup-python@v5.1.0
        with:
          python-version: "3.x"

      - name: INSTALL PYPA/BUILD
        run: >-
          python3 -m
          pip install
          build
          --user

      - name: BUILD A BINARY WHEEL AND A SOURCE TARBALL
        run: python3 -m build

      - name: STORE THE DISTRIBUTION PACKAGE
        uses: actions/upload-artifact@v4.3.3
        with:
          name: python-package-distributions
          path: dist/

  deploy-to-pypi:
    name: DEPLOY PACKAGE TO PYPI
    runs-on: [self-hosted]
    needs:
      - build

    environment:
      name: pypi
      url: https://pypi.org/p/yaclogger

    permissions:
      contents: read
      id-token: write

    steps:
      - name: DOWNLOAD ALL DISTS
        uses: actions/download-artifact@v4.1.7
        with:
          name: python-package-distributions
          path: dist/

      - name: PUBLISH TO PYPI
        uses: pypa/gh-action-pypi-publish@release/v1.8

  create_tag_and_release:
    name: CREATE TAG
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'release')
    runs-on: [self-hosted]
    needs:
      - get_version
      - deploy-to-pypi

    permissions:
      contents: write

    steps:
      - name: CHECKOUT CODE
        uses: actions/checkout@v4.1.6
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: CREATE TAG FOR RELEASE
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.RUNNER }}
          custom_tag: "${{ needs.get_version.outputs.MAJOR }}.${{ needs.get_version.outputs.MINOR }}.${{ needs.get_version.outputs.PATCH }}"
          tag_prefix: ""

      - name: CREATE RELEASE
        uses: ncipollo/release-action@v1
        with:
          generateReleaseNotes: true
          tag: "${{ needs.get_version.outputs.MAJOR }}.${{ needs.get_version.outputs.MINOR }}.${{ needs.get_version.outputs.PATCH }}"

  create_release_candidate_branch:
    name: CREATE RELEASE CANDIDATE BRANCH
    runs-on: [self-hosted]
    needs: create_tag_and_release
    permissions:
      contents: write
    env:
      GITHUB_TOKEN: ${{ secrets.RUNNER }}

    steps:
      - name: CREATE BRANCH
        uses: peterjgrainger/action-create-branch@v2.2.0
        with:
          branch: "release_candidate"
